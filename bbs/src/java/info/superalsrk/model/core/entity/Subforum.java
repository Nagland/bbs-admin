package info.superalsrk.model.core.entity;

// Generated 2013-4-2 11:21:36 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * Subforum generated by hbm2java
 */
@Entity
@Table(name = "subforum", catalog = "bbs")
public class Subforum implements java.io.Serializable {

	private int id;
	private User user;
	private Forum forum;
	private String name;
	private String description;
	private List<Topic> topics = new ArrayList<Topic>();

	public Subforum() {
	}

	public Subforum(int id) {
		this.id = id;
	}

	public Subforum(int id, User user, Forum forum, String name,
			String description, List<Topic> topics) {
		this.id = id;
		this.user = user;
		this.forum = forum;
		this.name = name;
		this.description = description;
		this.topics = topics;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy=GenerationType.AUTO)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "moderato")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "forum_id")
	public Forum getForum() {
		return this.forum;
	}

	public void setForum(Forum forum) {
		this.forum = forum;
	}

	@Column(name = "name", length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 50)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subforum",cascade=CascadeType.ALL)
	public List<Topic> getTopics() {
		return this.topics;
	}

	public void setTopics(List<Topic> topics) {
		this.topics = topics;
	}

}
