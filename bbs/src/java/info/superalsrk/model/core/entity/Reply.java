package info.superalsrk.model.core.entity;

// Generated 2013-3-30 18:00:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * Reply generated by hbm2java
 */
@Entity
@Table(name = "reply", catalog = "bbs")
public class Reply implements java.io.Serializable {

	private String id;
	private User user;
	private Topic topic;
	private Reply reply;
	private Date replyTime;
	private String replyContent;
	private Set<Reply> replies = new HashSet<Reply>(0);

	public Reply() {
	}

	public Reply(String id) {
		this.id = id;
	}

	public Reply(String id, User user, Topic topic, Reply reply,
			Date replyTime, String replyContent, Set<Reply> replies) {
		this.id = id;
		this.user = user;
		this.topic = topic;
		this.reply = reply;
		this.replyTime = replyTime;
		this.replyContent = replyContent;
		this.replies = replies;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 32)
	@GenericGenerator(name = "idGenerator", strategy = "uuid")
    @GeneratedValue(generator = "idGenerator")
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "replyPoster")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "topic_id")
	public Topic getTopic() {
		return this.topic;
	}

	public void setTopic(Topic topic) {
		this.topic = topic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reply_id")
	public Reply getReply() {
		return this.reply;
	}

	public void setReply(Reply reply) {
		this.reply = reply;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "replyTime", length = 19)
	public Date getReplyTime() {
		return this.replyTime;
	}

	public void setReplyTime(Date replyTime) {
		this.replyTime = replyTime;
	}

	@Column(name = "replyContent", length = 65535)
	public String getReplyContent() {
		return this.replyContent;
	}

	public void setReplyContent(String replyContent) {
		this.replyContent = replyContent;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "reply")
	public Set<Reply> getReplies() {
		return this.replies;
	}

	public void setReplies(Set<Reply> replies) {
		this.replies = replies;
	}

}
